///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sid_FCGAProject
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Losses_Screen_Yes recording.
    /// </summary>
    [TestModule("851a86df-01ac-4209-9318-cb8d5c51ca75", ModuleType.Recording, 1)]
    public partial class Losses_Screen_Yes : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repository.
        /// </summary>
        public static global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository repo = global::Sid_FCGAProject.Project_Repository.Sid_FCGAProjectRepository.Instance;

        static Losses_Screen_Yes instance = new Losses_Screen_Yes();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Losses_Screen_Yes()
        {
            Note_Desc = "OK";
            LCarrierName = "FWCI";
            LClaimCount = "2";
            IncurredAmount = "1234";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Losses_Screen_Yes Instance
        {
            get { return instance; }
        }

#region Variables

        string _Note_Desc;

        /// <summary>
        /// Gets or sets the value of variable Note_Desc.
        /// </summary>
        [TestVariable("3da2a1ac-d62b-40f9-9bb3-0b59e2979f2d")]
        public string Note_Desc
        {
            get { return _Note_Desc; }
            set { _Note_Desc = value; }
        }

        string _LCarrierName;

        /// <summary>
        /// Gets or sets the value of variable LCarrierName.
        /// </summary>
        [TestVariable("5a5200bc-56a3-45e2-a7f9-41ddde25add5")]
        public string LCarrierName
        {
            get { return _LCarrierName; }
            set { _LCarrierName = value; }
        }

        string _LClaimCount;

        /// <summary>
        /// Gets or sets the value of variable LClaimCount.
        /// </summary>
        [TestVariable("8526e2c3-8dd9-443a-a5e2-063f36b5df03")]
        public string LClaimCount
        {
            get { return _LClaimCount; }
            set { _LClaimCount = value; }
        }

        string _IncurredAmount;

        /// <summary>
        /// Gets or sets the value of variable IncurredAmount.
        /// </summary>
        [TestVariable("cbea6f40-2fee-4f0a-805e-8ecce8bb9ac9")]
        public string IncurredAmount
        {
            get { return _IncurredAmount; }
            set { _IncurredAmount = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BorderWhitePb2Pr2Radio.SpanTagSelect' at Center.", repo.ApplicationUnderTest.BorderWhitePb2Pr2Radio.SpanTagSelectInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.BorderWhitePb2Pr2Radio.SpanTagSelect.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LiTagYes' at Center.", repo.ApplicationUnderTest.LiTagYesInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.LiTagYes.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Carrier0' at Center.", repo.ApplicationUnderTest.Carrier0Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Carrier0.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LCarrierName' with focus on 'ApplicationUnderTest.Carrier0'.", repo.ApplicationUnderTest.Carrier0Info, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Carrier0.PressKeys(LCarrierName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LabelTagYes' at Center.", repo.ApplicationUnderTest.LabelTagYesInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.LabelTagYes.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Claims0' at Center.", repo.ApplicationUnderTest.Claims0Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Claims0.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LClaimCount' with focus on 'ApplicationUnderTest.Claims0'.", repo.ApplicationUnderTest.Claims0Info, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Claims0.PressKeys(LClaimCount);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Incurred0' at Center.", repo.ApplicationUnderTest.Incurred0Info, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Incurred0.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$IncurredAmount' with focus on 'ApplicationUnderTest.Incurred0'.", repo.ApplicationUnderTest.Incurred0Info, new RecordItemIndex(8));
            repo.ApplicationUnderTest.Incurred0.PressKeys(IncurredAmount);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TxtNote' at Center.", repo.ApplicationUnderTest.TxtNoteInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.TxtNote.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Note_Desc' with focus on 'ApplicationUnderTest.TxtNote'.", repo.ApplicationUnderTest.TxtNoteInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.TxtNote.PressKeys(Note_Desc);
            Delay.Milliseconds(0);
            
            Ranorex.AutomationHelpers.UserCodeCollections.WebLibrary.ReportFullPageScreenshot(repo.ApplicationUnderTest.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BtnSubmit' at Center.", repo.ApplicationUnderTest.BtnSubmitInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.BtnSubmit.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
